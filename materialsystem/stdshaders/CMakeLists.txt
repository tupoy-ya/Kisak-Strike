#//-----------------------------------------------------------------------------
#//	STDSHADER_DX9.VPC
#//
#//	Project Script
#//-----------------------------------------------------------------------------

cmake_minimum_required(VERSION 3.16)
project(stdshader_dx9_client)
set(SRCDIR "${CMAKE_SOURCE_DIR}")
set(CMAKE_MODULE_PATH ${SRCDIR}/cmake)
set(OUTBINNAME "stdshader_dx9_client")
set(OUTBINDIR ${SRCDIR}/../game/bin)
set(STDSHADERSDIR ${CMAKE_CURRENT_SOURCE_DIR})

include(${CMAKE_MODULE_PATH}/detect_platform.cmake)
include(${CMAKE_MODULE_PATH}/source_dll_base.cmake)

if( WIN32 OR POSIX )
    include_directories(fxctmp9)
    include_directories(vshtmp9)
endif()
include_directories(../)
add_definitions(-DSTDSHADER_DX9_DLL_EXPORT -DFAST_MATERIALVAR_ACCESS)

if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/aftershock.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/aftershock_helper.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/AccumBuff4Sample.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/accumbuff5sample.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/BaseVSShader.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/bik_dx90.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/black.cpp")
if( WINDOWS )
    #$File	"$STDSHADERSDIR\Blob_dx9.cpp"									[$WINDOWS]
    #$File	"$STDSHADERSDIR\Blob_helper.cpp"								[$WINDOWS]
endif()
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/Bloom.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/BlurFilterX.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/BlurFilterY.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/BufferClearObeyStencil_dx9.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/cable_dx9.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/character_ssao.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/character.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/cloak.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/cloak_blended_pass_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/cloak_dx9_helper.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/colorcorrection.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/colorout.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/cs_grass.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/customclothing.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/customweapon_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/customweapon_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/customcharacter.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/debugmrttexture.cpp")
endif()
if( WINDOWS )
    #$File	"$STDSHADERSDIR\debugmorphaccumulator_dx9.cpp"					[$WINDOWS]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/DebugTextureView.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/DecalModulate_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/DepthOfField_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/depthwrite.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/Downsample.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/downsample_nohdr.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/Engine_Post_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/embroider.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/emissive_scroll_blended_pass_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/eye_refract.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/eye_refract_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/eyes_dx8_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/eyes_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/eyeglint_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/flesh_interior_blended_pass_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/floatcombine.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/floatcombine_autoexpose.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/floattoscreen.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/floattoscreen_vanilla.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/gamecontrols.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/HDRCombineTo16Bit.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/HDRSelectRange.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/hsl_filmgrain_pass1.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/hsl_filmgrain_pass2.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/filmgrain.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/filmdust.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/hsv.cpp")
endif()
if( WINDOWS )
    #$File	"$STDSHADERSDIR\IceSurface_dx9.cpp"						[$WINDOWS]
    #$File	"$STDSHADERSDIR\IceSurface_helper.cpp"						[$WINDOWS]
endif()
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/introscreenspaceeffect.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/lightmappedgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/lightmappedgeneric_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/lightmappedpaint_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/lightmappedreflective.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/lightmapped_4wayblend.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/lightmapped_4wayblend_dx9_helper.cpp")
if( WINDOWS )
    #$File	"$STDSHADERSDIR\lightshafts.cpp"							[$WINDOWS]
    #$File	"$STDSHADERSDIR\lightshafts_helper.cpp"					[$WINDOWS]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/modulate_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/MonitorScreen_dx9.cpp")
if( WINDOWS )
    #$File	"$STDSHADERSDIR\morphaccumulate_dx9.cpp"					[$WINDOWS]
    #$File	"$STDSHADERSDIR\morphweight_dx9.cpp"						[$WINDOWS]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/motion_blur_dx9.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/object_motion_blur_dx9.cpp")
endif()
if( WINDOWS )
    #$File	"$STDSHADERSDIR\multiblend.cpp"							[$WINDOWS]
    #$File	"$STDSHADERSDIR\multiblend_dx9_helper.cpp"					[$WINDOWS]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/occlusion_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/paintblob_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/paintblob_helper.cpp")
if( WINDOWS )
    #$File	"$STDSHADERSDIR\parallaxtest.cpp"							[$WINDOWS]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/particlelitgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/particlelitgeneric_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/particlesphere_dx9.cpp")
if( PS3 )
    #$File	"$STDSHADERSDIR\playstation_test_dx9.cpp"					[$PS3]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/portal.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/portalstaticoverlay.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/portal_refract.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/portal_refract_helper.cpp")
if( WINDOWS )
    #$File	"$STDSHADERSDIR\projected.cpp"								[$WINDOWS]
    #$File	"$STDSHADERSDIR\projected_dx9_helper.cpp"					[$WINDOWS]
endif()
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/proto_ice.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/proto_ice_helper.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/prototype.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/prototype_helper.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/refract.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/refract_dx9_helper.cpp")
if( X360 )
    #$File	"$STDSHADERSDIR\rendertargetblit_x360.cpp"					[$X360]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/sample4x4.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/sample4x4_blend.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/screenspace_general.cpp")
if( WINDOWS )
    #$File	"$STDSHADERSDIR\sfm_blurfilterx.cpp"						[$WINDOWS]
    #$File	"$STDSHADERSDIR\sfm_blurfiltery.cpp"						[$WINDOWS]
    #$File	"$STDSHADERSDIR\sfm_shape.cpp"								[$WINDOWS]
    #$File	"$STDSHADERSDIR\sfm_downsample.cpp"							[$WINDOWS]
    #$File	"$STDSHADERSDIR\sfm_integercombine.cpp"						[$WINDOWS]
    #$File	"$STDSHADERSDIR\sfm_ambientocclusion.cpp"					[$WINDOWS]
    #$File	"$STDSHADERSDIR\sfm_ao_blur.cpp"							[$WINDOWS]
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/shadow.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/shadowbuild_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/shadowmodel_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/shatteredglass.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/showz.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/solidenergy_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/solidenergy_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/phong_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/sky_hdr_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/splinerope.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/sprite_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/spritecard.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/teeth.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/TreeLeaf.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/unlitgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/unlitworld_screensample.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/unlittwotexture_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/vertexlitgeneric_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/vertexlitgeneric_dx9_helper.cpp")
if( WINDOWS AND SOB )
    #$File	"$STDSHADERSDIR\vertexlit_sob_dx9.cpp"						[$WINDOWS && $SOB]
    #$File	"$STDSHADERSDIR\vertexlit_sob_dx9_helper.cpp"				[$WINDOWS && $SOB]
endif()
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/volume_clouds.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/volume_clouds_helper.cpp")
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/vortwarp_dx9.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/water.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/weapondecal_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/weapondecal_dx9_helper.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/windowimposter_dx90.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/wireframe_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/worldimposter.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/worldtwotextureblend.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/worldvertextransition.cpp")
if( NOT PS3 )
    target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/worldvertextransition_dx8_helper.cpp")
endif()
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/writez_dx9.cpp")
target_sources(${OUTBINNAME} PRIVATE "${STDSHADERSDIR}/writestencil_dx9.cpp")

target_link_libraries(${OUTBINNAME} mathlib_client shaderlib_client vstdlib_client tier1_client)

#This is missing some of the shader-building code... See stdshader_dx9.vpc.
#Looks like they have some sort of perl converter for their shading language, haven't looked at it much.
